{"version":3,"sources":["actions/constants.js","utils/history.js","actions/userAction.js","components/authentication/Login/loginFields.js","components/FormFields/FormFields.js","components/authentication/Login/Login.js","components/landing/Navigation/Navigation.js","components/authentication/SignUpForm/signUpFields.js","components/authentication/SignUpForm/SignUpForm.js","components/authentication/SignUpForm/SignUpSuccess.js","components/authentication/SignUp/SignUp.js","components/landing/Dashboard/TitleBar/TitleBar.js","components/Events/EventDetails/EventDetails.js","components/Events/NewEvent/NewEvent.js","utils/commons.js","actions/eventAction.js","components/Events/EventList/EventList.js","components/Schedules/ScheduleDetails/ScheduleDetails.js","actions/meetingAction.js","components/Schedules/ScheduleList/ScheduleList.js","components/landing/Dashboard/Dashboard.js","components/schedule/NewMeeting/NewMeeting.js","components/schedule/ScheduleMeeting/ScheduleMeeting.js","components/authentication/ForgotPassword/ForgotPassword.js","components/authentication/ResetPassword/resetFields.js","components/authentication/ResetPassword/ResetPassword.js","App.js","reducers/index.js","reducers/userReducer.js","reducers/eventReducer.js","reducers/meetingReducer.js","utils/store.js","index.js"],"names":["SERVER_URL","TIMING","history","createBrowserHistory","saveUser","values","dispatch","a","axios","post","res","type","payload","data","getUser","user_id","get","userLogin","user","push","sessionStorage","setItem","JSON","stringify","sendPasswordMail","email","resetPassword","val","put","label","placeholder","name","input","meta","error","touched","Form","Group","Label","Control","Text","className","Login","state","formSubmitted","renderFields","loginFields","map","item","Field","component","FormFields","onLogin","props","setState","getItem","to","Card","style","padding","margin","width","Title","onSubmit","this","handleSubmit","Button","variant","marginLeft","marginRight","Component","connect","userReducer","loggedIn","userAction","reduxForm","validate","errors","form","destroyOnUnmount","navigation","parse","Navbar","fixed","bg","Collapse","NavDropdown","title","full_name","id","Item","onClick","clear","window","location","reload","userActions","password","confirm_password","signUpFields","onFormSubmit","signUpSuccess","SignUp","signUpFormSubmitted","renderContent","SignUpSuccess","SignUpForm","titleBar","eventDetails","Body","event","event_name","isUser","duration","Footer","showEvent","showMeeting","NewEvent","selected15","selected30","selected45","selected60","selectedBox","toString","change","prevProps","selectedEvent","_id","custom_val","initialize","Modal","show","onHide","handleAddEvent","Header","closeButton","actionType","addEvent","controlId","ListGroup","horizontal","cursor","border","maxLength","marginTop","weekdays","months","getUserId","formatDate","myDate","myTime","getEndTimeFormat","getDateFormat","amPmSplit","split","amPm","length","timeSplit","join","myMin","parseInt","myHour","dateObj","newDate","Date","getDay","getMonth","getDate","getFullYear","compareKeys","b","bandA","bandB","comparison","viewEvents","eventList","eventReducer","useState","showAddEvent","setAddEvent","setActionType","setSelectedEvent","useEffect","eventAction","action","Container","Row","Col","marginBottom","Link","md","sm","EventDetails","trim","reset","scheduleDetails","meeting","meetingDate","first_name","last_name","duartion","meetingTime","viewMeetings","dated","ScheduleList","Object","keys","meetingList","sort","ScheduleDetails","showSheduleFor","renderSchedules","meetingReducer","Dashboard","key","changeTab","showTab","Navigation","TitleBar","Subtitle","disabledDates","today","dd","mm","yyyy","currentDat","getTime","setMeetingDate","setMeetingTime","setFormSubmitted","formError","setFormError","selectedTime","setSelectedTime","onChange","date","toISOString","obj","startTime","endTime","onTimeSelect","time","addMeetingHandler","event_id","undefined","handleAddMeeting","scrollable","size","fontSize","tileDisabled","view","some","disabledDate","timePresent","disabled","href","ScheduleMeeting","showAddMeeting","renderWrongLink","renderForm","match","params","handleReset","resetFields","invalidEmail","setInvalidEmail","handleResetPassword","App","alert","paddingTop","path","exact","ForgotPassword","ResetPassword","combineReducers","token","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27c60d98.chunk.js","sourcesContent":["//export const SERVER_URL = 'http://localhost:8088';\r\nexport const SERVER_URL = 'https://stormy-cliffs-24292.herokuapp.com'\r\n\r\nexport const ADD_USER = 'add_user';\r\nexport const GET_USER = 'get_user';\r\nexport const USER_INFO = 'user_info';\r\nexport const RESET_PASSWORD = 'reset_password';\r\nexport const LOGGED_IN = 'logged_in';\r\nexport const ADD_EVENT = 'add_event';\r\nexport const VIEW_EVENTS = 'view_events';\r\nexport const UPDATE_EVENT = 'update_event';\r\nexport const ADD_MEETING = 'add_meeting';\r\nexport const VIEW_MEETINGS = 'view_meetings';\r\n\r\n\r\nexport const TIMING = ['10:00am','10:15am','10:30am','10:45am','11:00am','11:15am','11:30am','11:45am','12:00pm','12:15pm','12:30pm','12:45pm','1:00pm','1:15pm','1:30pm','1:45pm','2:00pm','2:15pm','2:30pm','2:45pm','3:00pm','3:15pm','3:30pm','3:45pm','4:00pm','4:15pm','4:30pm','4:45pm','5:00pm','5:15pm','5:30pm','5:45pm','6:00pm','6:15pm','6:30pm','6:45pm','7:00pm','7:15pm','7:30pm','7:45pm']","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import axios from 'axios';\r\nimport { SERVER_URL, ADD_USER, USER_INFO, LOGGED_IN, GET_USER, RESET_PASSWORD } from './constants';\r\nimport { history } from '../utils/history';\r\n\r\nexport const saveUser = (values) => async dispatch => {\r\n\tconst res = await axios.post(`${SERVER_URL}/api/v1/user`, values);\r\n\r\n\tdispatch({ type: ADD_USER, payload: res.data });\r\n};\r\n\r\nexport const getUser = (user_id) => async dispatch => {\r\n\tconst res = await axios.get(`${SERVER_URL}/api/v1/user/${user_id}`);\r\n\tdispatch({ type: GET_USER, payload: res.data });\r\n};\r\n\r\n\r\nexport const userLogin = (values) => async dispatch => {\r\n    const res = await axios.post(`${SERVER_URL}/api/v1/user/login`, values);\r\n    if(res.data.user) {\r\n        history.push(\"/dashboard\")\r\n        sessionStorage.setItem('user', JSON.stringify(res.data.user));\r\n        sessionStorage.setItem('loggedIn', true);\r\n        dispatch({ type: USER_INFO, payload: res.data });\r\n    }\r\n};\r\n\r\nexport const sendPasswordMail = (email) => async dispatch => {\r\n    const res = await axios.get(`${SERVER_URL}/api/v1/user/send_mail/${email}`);\r\n    dispatch({ type: RESET_PASSWORD, payload: res.data });\r\n};\r\n\r\nexport const resetPassword = (val) => async dispatch => {\r\n\tconst res = await axios.put(`${SERVER_URL}/api/v1/user/reset_password/`, val);\r\n    dispatch({ type: RESET_PASSWORD, payload: res.data });\r\n};","export default [\r\n    { type:\"email\", label:\"Email address\", placeholder:\"Enter email\", name:\"email\" },\r\n    { type:\"password\", label:\"Password\", placeholder:\"Password\", name:\"password\" }\r\n];","//SurveyField contains logic to render a single label and text input\r\nimport React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nexport default ({ input, label, placeholder, type, meta: { error, touched } }) => {\r\n    return (\r\n        <Form.Group>\r\n            <Form.Label>{label}</Form.Label>\r\n            <Form.Control {...input} type={type} placeholder={placeholder} />\r\n            <Form.Text className=\"text-danger\">\r\n                {touched && error}\r\n            </Form.Text>\r\n        </Form.Group>\r\n    );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport * as userAction from '../../../actions/userAction';\r\nimport loginFields from './loginFields';\r\nimport FormFields from '../../FormFields/FormFields';\r\n\r\nclass Login extends Component {\r\n\tstate = {\r\n\t\tformSubmitted: false\r\n\t}\r\n\r\n\trenderFields = () => {\r\n\t\treturn loginFields.map((item) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Field component={FormFields} {...item} />\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\tonLogin = async (val) => {\r\n\t\tawait this.props.userLogin(val);\r\n\t\tif (!this.props.user) {\r\n\t\t\tthis.setState({ formSubmitted: true })\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (sessionStorage.getItem('user')) {\r\n\t\t\treturn <Redirect to=\"/dashboard\" />\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<Card style={{ padding: '10px', margin: '50px auto', width: '60%' }}>\r\n\t\t\t\t<Card.Title className=\"text-center\">Sign in</Card.Title>\r\n\t\t\t\t<Form onSubmit={this.props.handleSubmit((val) => this.onLogin(val))}>\r\n\t\t\t\t\t<Form.Text className=\"text-white bg-danger\">\r\n\t\t\t\t\t\t{this.state.formSubmitted && 'Email or password is incorrect'}\r\n\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t{this.renderFields()}\r\n\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\tLogin\r\n                    </Button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Link to=\"/forgot_password\"><Button variant=\"outline-primary\" style={{marginLeft: '5px', marginRight: '5px'}}>Forgot Password?</Button></Link>\r\n\t\t\t\t\t<Link to=\"/new_user\"><Button variant=\"outline-primary\">New User? Sign Up</Button></Link>\r\n\t\t\t\t</Form>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction validate(values) {\r\n\tconst errors = {};\r\n\r\n\tloginFields.map(({ label, name }) => {\r\n\t\tif (!values[name]) {\r\n\t\t\terrors[name] = `${label} is required`;\r\n\t\t}\r\n\t});\r\n\r\n\treturn errors;\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n\tconst { user, loggedIn } = state.userReducer\r\n\treturn {\r\n\t\tuser,\r\n\t\tloggedIn\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, userAction)(reduxForm({\r\n\tvalidate,\r\n\tform: 'loginForm',\r\n\tdestroyOnUnmount: true\r\n})(Login));","import React from 'react';\r\nimport { Navbar, NavDropdown } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { history } from '../../../utils/history';\r\n\r\nconst navigation = () => {\r\n    // <nav className=\"navbar fixed-top navbar-dark bg-dark\">\r\n    //     <div>\r\n    //         <span className=\"navbar-text right\">\r\n    //             Navbar text with an inline element\r\n    //         </span>\r\n    //     </div>\r\n    // </nav>\r\n    let user = JSON.parse(sessionStorage.getItem('user'));\r\n    return(\r\n    <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Collapse className=\"justify-content-end\" >\r\n    <NavDropdown title={user.full_name} id=\"collasible-nav-dropdown\">\r\n        <NavDropdown.Item onClick={() => {\r\n            sessionStorage.clear();\r\n            window.location.reload();}\r\n        }>Logout</NavDropdown.Item>\r\n      </NavDropdown>\r\n  </Navbar.Collapse>\r\n    </Navbar>);\r\n};\r\n\r\n\r\n\r\n\r\n{/* <Navbar>\r\n  <Navbar.Brand href=\"#home\">Navbar with text</Navbar.Brand>\r\n  <Navbar.Toggle />\r\n  <Navbar.Collapse className=\"justify-content-end\">\r\n    <Navbar.Text>\r\n      Signed in as: <a href=\"#login\">Mark Otto</a>\r\n    </Navbar.Text>\r\n  </Navbar.Collapse>\r\n</Navbar> */}\r\n\r\nexport default navigation;","export default [\r\n    { type:\"email\", label:\"Email address\", placeholder:\"Enter email\", name:\"email\" },\r\n    { type:\"text\", label:\"Full name\", placeholder:\"Enter full name\", name:\"full_name\" },\r\n    { type:\"password\", label:\"Password\", placeholder:\"Password\", name:\"password\" },\r\n    { type:\"password\", label:\"Confirm Password\", placeholder:\"Password\", name:\"confirm_password\" }\r\n];\r\n\r\n\r\n","import React from 'react';\r\nimport { Card, Form, Button } from 'react-bootstrap';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport * as userActions from '../../../actions/userAction';\r\nimport FormFields from '../../FormFields/FormFields';\r\nimport signUpFields from './signUpFields';\r\n\r\nconst signUpForm = ({ handleSubmit, onFormSubmit, saveUser }) => {\r\n\tconst renderFields = () => {\r\n\t\treturn signUpFields.map((item) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Field component={FormFields} {...item} />\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card.Title className=\"text-center\">Sign Up</Card.Title>\r\n\t\t\t<Form onSubmit={handleSubmit((val) => onFormSubmit(val, saveUser))}>\r\n\t\t\t\t{renderFields()}\r\n\t\t\t\t<Button variant=\"primary\" type=\"submit\" >\r\n\t\t\t\t\tRegister\r\n                </Button>\r\n\t\t\t\t<Link to=\"/\" style={{ marginLeft: '10px' }}>\r\n\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" >\r\n\t\t\t\t\t\tCancel\r\n                    </Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</Form>\r\n\t\t</>)\r\n};\r\n\r\nfunction validate(values) {\r\n\tconst errors = {};\r\n\r\n\tif (values.password !== values.confirm_password) {\r\n\t\terrors.confirm_password = 'Confirm password does not match'\r\n\t}\r\n\r\n\tsignUpFields.map(({ label, name }) => {\r\n\t\tif (!values[name]) {\r\n\t\t\terrors[name] = `${label} is required`;\r\n\t\t}\r\n\t});\r\n\r\n\treturn errors;\r\n}\r\n\r\nexport default connect(null, userActions)(reduxForm({\r\n\tvalidate,\r\n\tform: 'signUpForm',\r\n\tdestroyOnUnmount: true\r\n})(signUpForm));","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst signUpSuccess = () => (\r\n    <div>\r\n        <Card.Title>Thank you for registration</Card.Title>\r\n        <Link to=\"/\">Login</Link>\r\n    </div>\r\n    \r\n\r\n);\r\n\r\nexport default signUpSuccess;","import React, { Component } from 'react';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport * as userActions from '../../../actions/userAction';\r\nimport SignUpForm from '../SignUpForm/SignUpForm';\r\nimport SignUpSuccess from '../SignUpForm/SignUpSuccess';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        signUpFormSubmitted: false\r\n    }\r\n    \r\n    onFormSubmit = async (val, saveUser) => {\r\n\t\tthis.setState({signUpFormSubmitted: true})\r\n\t\tawait saveUser(val);\r\n\t}\r\n\r\n    renderContent = () => {\r\n        if(this.state.signUpFormSubmitted) {\r\n            return (<SignUpSuccess />)\r\n        } else {\r\n            return (\r\n                <SignUpForm onFormSubmit={this.onFormSubmit} />\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card style={{padding: '10px', margin: '50px auto', width: '60%' }}>\r\n                {this.renderContent()}\r\n            </Card>           \r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default SignUp;\r\n\r\n// function mapStateToProps({ }, ) {\r\n// \treturn {}\r\n// }\r\n\r\n// export default connect(null, userActions)(reduxForm({\r\n//     form: 'signUpForm',\r\n//     destroyOnUnmount: false\r\n// })(signUp));","import React from 'react';\r\n\r\nconst titleBar = () => (\r\n    <div>My Schedule</div>\r\n);\r\n\r\n\r\nexport default titleBar;","import React from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\n\r\nconst eventDetails = (props) => (\r\n    <Card style={{ width: '18rem' }}>\r\n  <Card.Body>\r\n<Card.Title>{props.event.event_name}</Card.Title>\r\n{ props.isUser && <Card.Text>{props.event.duration} min</Card.Text> }\r\n    </Card.Body>\r\n    <Card.Footer className=\"text-muted\">\r\n    { props.isUser && <Button onClick={() => props.showEvent('open', 'Edit', props.event)}>Edit</Button> }\r\n    { !props.isUser && <Button onClick={() => props.showMeeting('open', props.event)}>Select</Button> }\r\n    </Card.Footer>\r\n    \r\n</Card>\r\n)\r\n\r\nexport default eventDetails;","import React, { Component } from 'react';\r\nimport { Modal, Button, Card, Form, ListGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Field, reduxForm, change } from 'redux-form';\r\nimport FormFields from '../../FormFields/FormFields';\r\n\r\n\r\nclass NewEvent extends Component {\r\n\r\n    state = {\r\n        selected15 : false,\r\n        selected30 : false,\r\n        selected45 : false,\r\n        selected60 : false\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.selectedEvent !== this.props.selectedEvent) {\r\n        \r\n        const {event_name, duration, _id} = this.props.selectedEvent;\r\n        if(event_name !== null && duration !== null) {\r\n            //this.props.initialize({'addEvent', 'event_name', event_name})\r\n            this.selectedBox(duration);\r\n            let custom_val = '';\r\n            if(duration !== 15 && duration !== 30 && duration !== 45 && duration !== 60) {\r\n                custom_val = duration\r\n            }\r\n            this.props.initialize({event_name : event_name, duration: duration, custom_val: custom_val, _id});\r\n            \r\n        }\r\n    }\r\n    }\r\n\r\n    selectedBox = (val) => {\r\n        if(val) {\r\n            val = val.toString()\r\n        }\r\n        switch (val) {\r\n            case '15':\r\n                this.setState({\r\n                    selected15: true,\r\n                    selected30: false,\r\n                    selected45: false,\r\n                    selected60: false\r\n                });\r\n                this.props.dispatch(change('addEvent', 'duration', 15));\r\n                this.props.dispatch(change('addEvent', 'custom_val', ''));\r\n                break;\r\n                case '30':\r\n                    this.setState({\r\n                        selected15: false,\r\n                        selected30: true,\r\n                        selected45: false,\r\n                        selected60: false\r\n                    });\r\n                    this.props.dispatch(change('addEvent', 'duration', 30));\r\n                    this.props.dispatch(change('addEvent', 'custom_val', ''));\r\n                    break;\r\n\r\n                    case '45':\r\n                this.setState({\r\n                    selected15: false,\r\n                    selected30: false,\r\n                    selected45: true,\r\n                    selected60: false\r\n                });\r\n                this.props.dispatch(change('addEvent', 'duration', 45));\r\n                this.props.dispatch(change('addEvent', 'custom_val', ''));\r\n                break;\r\n\r\n                case '60':\r\n                this.setState({\r\n                    selected15: false,\r\n                    selected30: false,\r\n                    selected45: false,\r\n                    selected60: true\r\n                });\r\n                this.props.dispatch(change('addEvent', 'duration', 60));\r\n                this.props.dispatch(change('addEvent', 'custom_val', ''));\r\n                break;\r\n        \r\n            default:\r\n                this.setState({\r\n                    selected15: false,\r\n                    selected30: false,\r\n                    selected45: false,\r\n                    selected60: false\r\n                });\r\n                this.props.dispatch(change('addEvent', 'duration', 0));\r\n                break;\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal show={this.props.show} onHide={() => this.props.handleAddEvent('close')}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{this.props.actionType} Event Type</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Card style={{padding: '10px'}}>\r\n        <Form onSubmit={this.props.handleSubmit((val) => this.props.addEvent(val, this.props.actionType))}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Field component={FormFields} type=\"text\" label=\"Event name\" placeholder=\"Enter Event\" name=\"event_name\" />\r\n                    <Field component=\"input\" type=\"hidden\" name=\"duration\"  />\r\n                    <Field component=\"input\" type=\"hidden\" name=\"_id\"  />\r\n                </Form.Group>\r\n                <ListGroup horizontal>\r\n                    <ListGroup.Item style={{cursor: 'pointer', border: this.state.selected15 ? '1px solid #000' : ''}} onClick={() => this.selectedBox('15')}>15</ListGroup.Item>\r\n                    <ListGroup.Item style={{cursor: 'pointer', border: this.state.selected30 ? '1px solid #000' : ''}} onClick={() => this.selectedBox('30')}>30</ListGroup.Item>\r\n                    <ListGroup.Item style={{cursor: 'pointer', border: this.state.selected45 ? '1px solid #000' : ''}} onClick={() => this.selectedBox('45')}>45</ListGroup.Item>\r\n                    <ListGroup.Item style={{cursor: 'pointer', border: this.state.selected60 ? '1px solid #000' : ''}} onClick={() => this.selectedBox('60')}>60</ListGroup.Item>\r\n                    <ListGroup.Item onClick={() => this.selectedBox('0')}>\r\n                        <Field className=\"form-control\" component=\"input\" type=\"number\" placeholder=\"custom\" name=\"custom_val\" maxLength=\"2\" />\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n                <Button type=\"submit\" variant=\"primary\" style={{marginTop: '5px'}}>\r\n            Save\r\n          </Button>\r\n            </Form>\r\n        </Card>\r\n        </Modal.Body>\r\n        {/* <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => this.props.handleAddEvent('close')}>\r\n            Close\r\n          </Button>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Save\r\n          </Button>\r\n        </Modal.Footer> */}\r\n      </Modal>\r\n        )\r\n    }\r\n};\r\n\r\nfunction validate(values) {\r\n\tconst errors = {};\r\n\tif (!values.event_name) {\r\n        errors.event_name = `Event name is required`;\r\n    }\r\n    if (!values.duration && !values .custom_val) {\r\n        errors.event_name = `Select duration`;\r\n    }\r\n\r\n\treturn errors;\r\n}\r\n\r\nexport default (reduxForm({\r\n    validate,\r\n    form: 'addEvent',\r\n    destroyOnUnmount: true\r\n})(NewEvent));","const weekdays = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\r\nconst months = ['January','February','March','April','May','June','July','August','September','October','November','December'];\r\n\r\nexport const getUserId = () => {\r\n    let user = sessionStorage.getItem('user');\r\n    let user_id = \"\";\r\n    if(user) {\r\n        user = JSON.parse(user)\r\n        user_id = user._id\r\n    }\r\n\r\n    return user_id;\r\n}\r\n\r\n\r\nexport const formatDate = (myDate, myTime, duration) => {\r\n\t\r\n    let endTime = getEndTimeFormat(myTime, duration);\r\n\tlet dateString = getDateFormat(myDate);\r\n\r\n\tlet formatDateTime = myTime + \" - \" + endTime + \", \" + dateString\r\n\r\n\treturn formatDateTime;\r\n}\r\n\r\nexport const getEndTimeFormat = (myTime, duration) => {\r\n    let amPmSplit = myTime.split('');\r\n\tlet amPm = amPmSplit[amPmSplit.length-2] + amPmSplit[amPmSplit.length-1]\r\n\tlet timeSplit = myTime.split('am').join('').split('pm').join('').split(\":\")\r\n\r\n\tlet myMin = parseInt(timeSplit[1]) + parseInt(duration);\r\n\tlet myHour = parseInt(timeSplit[0])\r\n\tif(myMin >= 60) {\r\n\t\tmyMin -= 60\r\n\t\tmyHour += 1\r\n\t}\r\n\r\n\tif(myHour>=12) {\r\n\t\tamPm = 'pm'\r\n    }\r\n    \r\n\tif(myHour>12) {\r\n\t\tmyHour -= 12\r\n    }\r\n    if(myMin < 10) {\r\n        myMin = ('0'+myMin)\r\n    }\r\n    let endTime = myHour+\":\"+myMin+amPm;\r\n\r\n    return endTime;\r\n    \r\n}\r\n\r\nexport const getDateFormat = (dateObj) => {\r\n    let newDate = new Date(dateObj);\r\n    return (weekdays[newDate.getDay()] + \", \" + months[newDate.getMonth()] + \" \" + newDate.getDate() + \", \" + newDate.getFullYear());\r\n}\r\n\r\nexport const compareMeetingDate = (a, b) => {\r\n    const bandA = new Date(a.meetingDate);\r\n    const bandB = new Date(b.meetingDate);\r\n  \r\n    let comparison = 0;\r\n    if (bandA > bandB) {\r\n      comparison = 1;\r\n    } else if (bandA < bandB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  }\r\n\r\n\r\n  export const sortObject = (obj) => {\r\n    let keyList = Object.keys(obj).sort(compareKeys)\r\n\tconst temp = {}\r\n\tfor (let i = 0; i < keyList.length; i++) {\r\n        temp[keyList[i]] = obj[keyList[i]];\r\n        delete obj[keyList[i]];\r\n    }\r\n\r\n    for (var i = 0; i < keyList.length; i++) { \r\n        obj[keyList[i]] = temp[keyList[i]]; \r\n    }\r\n    return obj;\r\n}\r\n\r\nexport const compareKeys = (a, b) => {\r\n  // Use toUpperCase() to ignore character casing\r\n  const bandA = new Date(a);\r\n  const bandB = new Date(b);\r\n\r\n  let comparison = 0;\r\n  if (bandA > bandB) {\r\n    comparison = 1;\r\n  } else if (bandA < bandB) {\r\n    comparison = -1;\r\n  }\r\n  return comparison;\r\n}","import axios from 'axios';\r\nimport { SERVER_URL, ADD_EVENT, VIEW_EVENTS, UPDATE_EVENT} from './constants';\r\nimport { reset } from 'redux-form';\r\nimport { getUserId } from '../utils/commons';\r\n\r\n\r\n\r\n\r\nexport const addEvent = (values, event) => async dispatch => {\r\n    \r\n    let user_id = getUserId();\r\n    let {event_name, duration, custom_val, _id} = values;\r\n    if(custom_val && custom_val.trim().length > 0) {\r\n        duration = custom_val;\r\n    }\r\n    let res;\r\n    if(event === 'Add') {\r\n        res = await axios.post(`${SERVER_URL}/api/v1/event/add`, {event_name, duration, user_id});\r\n        dispatch({ type: ADD_EVENT, payload: res.data });\r\n    } else if(event === 'Edit') {\r\n        res = await axios.put(`${SERVER_URL}/api/v1/event/update`, {event_name, duration, user_id, _id});\r\n        dispatch({ type: UPDATE_EVENT, payload: res.data });\r\n    }\r\n\r\n    \r\n\r\n    dispatch(reset('addEvent'));\r\n    \r\n    //viewEvents();\r\n\r\n\t\r\n};\r\n\r\nexport const viewEvents = (user_id) => async dispatch => {\r\n    //let user_id = getUserId();\r\n\tconst res = await axios.get(`${SERVER_URL}/api/v1/event/list/${user_id}`);\r\n\tdispatch({ type: VIEW_EVENTS, payload: res.data });\r\n};\r\n","import React, { Component, useEffect, useState } from 'react';\r\nimport EventDetails from '../EventDetails/EventDetails';\r\nimport { Row, Col, Container, Button, Card, CardDeck } from 'react-bootstrap';\r\nimport NewEvent from '../NewEvent/NewEvent';\r\nimport { connect } from 'react-redux';\r\nimport * as eventAction from '../../../actions/eventAction';\r\nimport { reset } from 'redux-form';\r\nimport { getUserId } from '../../../utils/commons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst EventList = (props) => {\r\n\r\n\tconst [showAddEvent, setAddEvent] = useState(false);\r\n\tconst [actionType, setActionType] = useState('add');\r\n\tconst [selectedEvent, setSelectedEvent] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.dispatch(eventAction.viewEvents(getUserId()));\r\n\t}, [showAddEvent]);\r\n\r\n\tconst handleAddEvent = (event, action, selectedEvent) => {\r\n\t\tif (event === 'open') {\r\n\t\t\tsetActionType(action);\r\n\t\t\tsetSelectedEvent(selectedEvent);\r\n\t\t\tsetAddEvent(true);\r\n\t\t} else if (event === 'close') {\r\n\t\t\tsetAddEvent(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst addEvent = (val, event) => {\r\n\t\tprops.dispatch(eventAction.addEvent(val, event));\r\n\t\thandleAddEvent('close');\r\n\t\tprops.dispatch(reset('addEvent'));\r\n\t\tprops.dispatch(eventAction.viewEvents(getUserId()));\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col style={{ marginBottom: '5px' }}>\r\n\t\t\t\t\t\t<Card.Title>My Link</Card.Title>\r\n\t\t\t\t\t\t<Card.Link>https://stormy-cliffs-24292.herokuapp.com/meeting/{props.user_id}</Card.Link>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md=\"auto\">\r\n\t\t\t\t\t\t<Button onClick={() => handleAddEvent('open', 'Add', {})}>Add New Event Type</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.eventList &&\r\n\t\t\t\t\t\tprops.eventList.map((event) => (\r\n\t\t\t\t\t\t\t<Col sm=\"4\" style={{ marginBottom: '10px' }}><EventDetails isUser={true} event={event} showEvent={handleAddEvent} /></Col>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t\t{/* <CardDeck>\r\n\t\t\t{\r\n\t\t\t\t\t\tprops.eventList &&\r\n\t\t\t\t\t\tprops.eventList.map((event) => (\r\n\t\t\t\t\t\t\t<EventDetails isUser={true} event={event} showEvent={handleAddEvent} />\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t</CardDeck> */}\r\n\r\n\t\t\t<NewEvent show={showAddEvent} selectedEvent={selectedEvent} handleAddEvent={handleAddEvent} addEvent={addEvent} actionType={actionType} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nfunction mapStateToProps(state, props) {\r\n\treturn {\r\n\t\teventList: state.eventReducer.eventList,\r\n\t\tuser_id: JSON.parse(sessionStorage.getItem('user'))._id\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(EventList);","import React from 'react';\r\nimport { Card, ListGroup, Col, Row } from 'react-bootstrap';\r\nimport { getDateFormat, getEndTimeFormat } from '../../../utils/commons';\r\n\r\nconst scheduleDetails = (props) => {\r\n    const { first_name, last_name, duartion, meetingDate, meetingTime, event_name } = props.meeting[0];\r\n    return (\r\n\r\n        <div>\r\n            <ListGroup variant=\"flush\">\r\n            <ListGroup.Item variant=\"dark\">{getDateFormat(meetingDate)}</ListGroup.Item>\r\n                {\r\n                    props.meeting && \r\n                    props.meeting.map((item) => {\r\n                        return (\r\n                                \r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col className=\"col-sm-1\">1</Col>\r\n                        <Col className=\"col-sm-2\">{item.meetingTime} - {getEndTimeFormat(item.meetingTime, item.duration)}</Col>\r\n                                        <Col>{item.first_name} {item.last_name}<br />{item.event_name}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            \r\n                        )\r\n                    })\r\n                }\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n    // </Card>\r\n}\r\n\r\nexport default scheduleDetails;","import axios from 'axios';\r\nimport { SERVER_URL, ADD_MEETING, VIEW_MEETINGS} from './constants';\r\nimport { reset } from 'redux-form';\r\nimport {compareMeetingDate, sortObject} from '../utils/commons';\r\n\r\nexport const addMeeting = (values, event_id, user_id) => async dispatch => {\r\n    //values.meetingDate = new Date(values.meetingDate);\r\n    let res = await axios.post(`${SERVER_URL}/api/v1/meeting/add`, {...values, event_id, user_id});\r\n    dispatch({ type: ADD_MEETING, payload: res.data });\r\n    dispatch(reset('addMeeting'));\r\n};\r\n\r\nexport const viewMeetings = (user_id, dated) => async dispatch => {\r\n    const res = await axios.get(`${SERVER_URL}/api/v1/meeting/list/${user_id}/${dated}`);\r\n\tdispatch({ type: VIEW_MEETINGS, payload: res.data });\r\n};\r\n","import React, { Component } from 'react';\r\nimport ScheduleDetails from '../ScheduleDetails/ScheduleDetails';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { viewMeetings } from '../../../actions/meetingAction';\r\nimport { getUserId, compareKeys } from '../../../utils/commons';\r\n\r\n\r\nclass ScheduleList extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(viewMeetings(getUserId(), 'present'));\r\n    }\r\n\r\n    showSheduleFor(type) {\r\n        this.props.dispatch(viewMeetings(getUserId(), type));\r\n    }\r\n\r\n    renderSchedules() {\r\n        let meetingKeys = Object.keys(this.props.meetingList).sort(compareKeys);\r\n        return meetingKeys.map((item) => {\r\n            return (<ScheduleDetails meeting={this.props.meetingList[item]} />)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n        <Button variant=\"outline-primary\" onClick={() => this.showSheduleFor('present')}>Upcoming</Button>{' '}\r\n        <Button variant=\"outline-primary\" onClick={() => this.showSheduleFor('past')}>Past</Button>{' '}\r\n        <Card style={{marginTop: '10px'}}>\r\n            {\r\n                this.props.meetingList && \r\n                (this.renderSchedules())\r\n            }\r\n        </Card>\r\n        \r\n    </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nfunction mapStateToProps(state, props) {\r\n    return {\r\n        meetingList: state.meetingReducer.meetingList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ScheduleList);","import React, { Component } from 'react';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport SignUp from '../../authentication/SignUp/SignUp';\r\nimport TitleBar from './TitleBar/TitleBar';\r\n\r\nimport { Card, Tabs, Tab, Button } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport EventList from '../../Events/EventList/EventList';\r\nimport ScheduleList from '../../Schedules/ScheduleList/ScheduleList';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    state = {\r\n        key: 'events'\r\n    }\r\n\r\n    changeTab = (key) => {\r\n        this.setState({ key })\r\n    }\r\n\r\n    showTab = () => {\r\n        if(this.state.key === 'schedules') {\r\n            return (<ScheduleList />)\r\n        } else {\r\n            return (<EventList />)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(sessionStorage.getItem('loggedIn') === null) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        \r\n\r\n        \r\n        return (\r\n            <div>\r\n                <Navigation />\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            <TitleBar /> \r\n                        </Card.Title>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\">\r\n                            <Button onClick={() => this.changeTab('events')} style={{marginRight: '10px'}}>Event Types</Button>\r\n                            <Button onClick={() => this.changeTab('schedules')}>Scheduled Events</Button>\r\n                        </Card.Subtitle>\r\n\r\n                        \r\n                        <Card.Text>\r\n                            {this.showTab()}\r\n                        </Card.Text>\r\n                        \r\n                    </Card.Body>\r\n                </Card>\r\n\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default Dashboard;","import React, { Component, useState } from 'react';\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\r\nimport Calendar from 'react-calendar';\r\nimport { Field, reduxForm, change } from 'redux-form';\r\nimport { TIMING } from '../../../actions/constants';\r\nimport { addMeeting } from '../../../actions/meetingAction';\r\nimport { formatDate, getEndTimeFormat } from '../../../utils/commons';\r\nimport FormFields from '../../FormFields/FormFields';\r\n\r\n\r\nconst disabledDates = [\r\n\t//new Date(2020, 4, 4),\r\n]\r\n\r\nconst today = new Date();\r\nconst dd = today.getDate();\r\n\r\nconst mm = today.getMonth();\r\nconst yyyy = today.getFullYear();\r\n\r\nconst currentDat = new Date(yyyy, mm, dd).getTime();\r\n\r\nconst NewMeeting  = (props) => {\r\n\r\n\tconst [meetingDate, setMeetingDate] = useState('');\r\n\tconst [meetingTime, setMeetingTime] = useState('');\r\n\tconst [formSubmitted, setFormSubmitted] = useState(false);\r\n\tconst [formError, setFormError] = useState(false);\r\n\tconst [selectedTime, setSelectedTime] = useState([]);\r\n\r\n\t\r\n\r\n\tconst onChange = (date) => {\r\n\t\tsetMeetingDate(date.toISOString());\r\n\t\tprops.dispatch(change('addMeeting', 'meetingDate', date.toISOString()));\r\n\t\tlet selectedTime = []\r\n\t\tif (props.meetingList[date]) {\r\n\t\t\tselectedTime = props.meetingList[date]\r\n\t\t\t\t.map((obj) => (\r\n\t\t\t\t\t{ duration: obj.duration, startTime: obj.meetingTime, endTime: getEndTimeFormat(obj.meetingTime, obj.duration) })\r\n\t\t\t\t)\r\n\t\t\tselectedTime.map(item => {\r\n\t\t\t\tif (meetingTime >= item.startTime && meetingTime <= item.endTime) {\r\n\t\t\t\t\tsetMeetingTime('')\r\n\t\t\t\t\tprops.dispatch(change('addMeeting', 'meetingTime', ''));\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tsetSelectedTime(selectedTime);\r\n\t\t\tsetFormError(false);\r\n\t\t} else {\r\n\t\t\tsetSelectedTime([]);\r\n\t\t\tsetFormError(false);\r\n\t\t}\r\n\t}\r\n\r\n\tconst onTimeSelect = (time) => {\r\n\t\tsetMeetingTime(time)\r\n\t\tsetFormError(false);\r\n\t\tprops.dispatch(change('addMeeting', 'meetingTime', time));\r\n\t}\r\n\r\n\tconst addMeetingHandler = (val) => {\r\n\t\tif((val.meetingTime === undefined || val.meetingTime.trim().length === 0) || (val.meetingDate === undefined || val.meetingDate.trim().length === 0)) {\r\n\t\t\tsetFormError(true);\r\n\t\t\treturn\r\n\t\t}\r\n\t\tval[\"event_name\"] = props.selectedEvent.event_name;\r\n\t\tval[\"duration\"] = props.selectedEvent.duration;\r\n\t\tprops.dispatch(addMeeting(val, props.selectedEvent._id, props.user._id))\r\n\t\tsetFormSubmitted(true);\r\n\t}\r\n\r\n\tconst showConfirmation = () => (\r\n\t\t<Modal.Header closeButton>\r\n\t\t\t<Modal.Title>\r\n\t\t\t\tConfirmed<br />\r\n\t\t\t\t{props.selectedEvent.event_name} scheduled with {props.user.full_name}<br />\r\n\t\t\t\t{formatDate(meetingDate, meetingTime, props.selectedEvent.duration)}<br />\r\n\t\t\t\t<Button onClick={() => setFormSubmitted(false) }>\r\n\t\t\t\t\tSchedule Another meeting\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Title>\r\n\t\t</Modal.Header>\r\n\t)\r\n\r\n\tconst showForm = () => (\r\n\t\t<div>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title style={{margin: '10px'}}>\t\t\t\t\t\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t{props.user.full_name}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row style={{fontSize: '20px'}}>\r\n\t\t\t\t\t{props.selectedEvent.event_name}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row style={{fontSize: '18px', padding: '5px'}}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tformError && (<Form.Text className=\"text-white bg-danger\">Please select date & time</Form.Text>)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t!formError && meetingDate.length > 0 && meetingTime.length > 0 &&\r\n\t\t\t\t\t\tformatDate(meetingDate, meetingTime, props.selectedEvent.duration)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Modal.Title>\r\n\t\t\t\t\r\n\t\t\t</Modal.Header>\r\n\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Form onSubmit={props.handleSubmit(addMeetingHandler)}>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col className=\"col-sm-5\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Field component={FormFields} label=\"First name\" type=\"text\" placeholder=\"First Name\" name=\"first_name\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Field component={FormFields} label=\"Last name\" type=\"text\" placeholder=\"Last Name\" name=\"last_name\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Field component={FormFields} label=\"Email address\" type=\"email\" placeholder=\"Enter email\" name=\"email\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Field className=\"form-control\" component=\"input\" type=\"hidden\" name=\"meetingDate\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Field className=\"form-control\" component=\"input\" type=\"hidden\" name=\"meetingTime\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Calendar\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t\t\ttileDisabled={({ date, view }) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (view === 'month' &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t(disabledDates.some(disabledDate => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate.getFullYear() === disabledDate.getFullYear() &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate.getMonth() === disabledDate.getMonth() &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate.getDate() === disabledDate.getDate()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(date.getDay() === 0 || date.getDay() === 6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(currentDat > date.getTime())\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t//Add some other dates here\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t<Col className=\"col-sm-7\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tTIMING.map((time) => {\r\n\t\t\t\t\t\t\t\t\t\t// return (\r\n\t\t\t\t\t\t\t\t\t\t//     <Col className=\"col-sm-3\" style={{ marginBottom: '5px' }}><Button variant=\"outline-primary\" onClick={() => onTimeSelect(time)}>{time}</Button></Col>\r\n\t\t\t\t\t\t\t\t\t\t// )\r\n\t\t\t\t\t\t\t\t\t\tif (selectedTime.length === 0) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"col-sm-3\" style={{ marginBottom: '5px' }}><Button variant=\"outline-primary\" onClick={() => onTimeSelect(time)}>{time}</Button></Col>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlet timePresent = false\r\n\t\t\t\t\t\t\t\t\t\tselectedTime.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (time >= item.startTime && time <= item.endTime) {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttimePresent = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\tif (timePresent) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"col-sm-3\" style={{ marginBottom: '5px' }}><Button disabled href=\"#\" variant=\"secondary\">{time}</Button></Col>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"col-sm-3\" style={{ marginBottom: '5px' }}><Button variant=\"outline-primary\" onClick={() => onTimeSelect(time)}>{time}</Button></Col>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">Schedule Event</Button>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal.Body>\r\n\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t{/* <Button variant=\"secondary\">Close</Button>\r\n            <Button variant=\"primary\">Schedule Event</Button> */}\r\n\t\t\t</Modal.Footer>\r\n\t\t</div>\r\n\t)\r\n\r\n\t\r\n\t\treturn (\r\n\t\t\t<Modal show={props.show} onHide={() => {\r\n\t\t\t\tprops.handleAddMeeting('close');\r\n\t\t\t\tsetMeetingDate('');\r\n\t\t\t\tsetMeetingTime('');\r\n\t\t\t\tsetFormSubmitted(false);\r\n\t\t\t\tsetSelectedTime([])\r\n\t\t\t}} scrollable={true} size=\"xl\">\r\n\t\t\t\t{formSubmitted && showConfirmation()}\r\n\t\t\t\t{(!formSubmitted) && showForm()}\r\n\t\t\t</Modal>\r\n\t\t)\r\n};\r\n\r\n\r\nfunction validate(values) {\r\n\tconst errors = {};\r\n\tif (!values.first_name) {\r\n\t\terrors.first_name = `First name is required`;\r\n\t}\r\n\tif (!values.last_name) {\r\n\t\terrors.last_name = `Last name is required`;\r\n\t}\r\n\tif (!values.email) {\r\n\t\terrors.email = `Email is required`;\r\n\t}\r\n\r\n\treturn errors;\r\n}\r\n\r\nexport default (reduxForm({\r\n\tvalidate,\r\n\tform: 'addMeeting',\r\n\tdestroyOnUnmount: true\r\n})(NewMeeting));","import React, { Component } from 'react';\r\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport EventDetails from '../../Events/EventDetails/EventDetails';\r\nimport NewMeeting from '../NewMeeting/NewMeeting';\r\nimport { connect } from 'react-redux';\r\nimport * as eventAction from '../../../actions/eventAction';\r\nimport { getUser } from '../../../actions/userAction';\r\nimport { viewMeetings } from '../../../actions/meetingAction';\r\n\r\n\r\nclass ScheduleMeeting extends Component {\r\n\tstate = {\r\n\t\tshowAddMeeting: false,\r\n\t\tselectedEvent: {}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.dispatch(eventAction.viewEvents(this.props.match.params.user_id));\r\n\t\t//this.props.match.params.user_id\r\n\t\tthis.props.dispatch(getUser(this.props.match.params.user_id));\r\n\t\tthis.props.dispatch(viewMeetings(this.props.match.params.user_id, 'present'))\r\n\t}\r\n\r\n\thandleAddMeeting = (event, selectedEvent) => {\r\n\t\tif (event === 'open') {\r\n\t\t\tthis.setState({ selectedEvent: selectedEvent, showAddMeeting: true })\r\n\t\t} else if (event === 'close') {\r\n\t\t\tthis.setState({ showAddMeeting: false })\r\n\t\t}\r\n\t}\r\n\r\n\trenderWrongLink = () => (\r\n\t\t<Card className=\"text-center\">\r\n\t\t\t\t<Card.Title>Please check ur Link</Card.Title>\r\n\t\t\t\t</Card>\r\n\t)\r\n\r\n\trenderForm = () => (\r\n\t\t<Card className=\"text-center\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Card.Title>{this.props.user.full_name}</Card.Title>\r\n\t\t\t\t<Card.Text>\r\n\t\t\t\t\tWelcome to my scheduling page. Please follow the instruction to add schedule to my calender.\r\n\t\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.props.eventList &&\r\n\t\t\t\t\t\t\tthis.props.eventList.map((event) => (\r\n\t\t\t\t\t\t\t\t<Col style={{ marginBottom: '10px' }}><EventDetails event={event} showMeeting={this.handleAddMeeting} /></Col>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</Card.Body>\r\n\t\t\t<NewMeeting meetingList={this.props.meetingList} show={this.state.showAddMeeting} selectedEvent={this.state.selectedEvent} user={this.props.user} handleAddMeeting={this.handleAddMeeting} />\r\n\t\t</Card>\r\n\t)\r\n\r\n\trender() {\r\n\t\tif (this.props.user) {\r\n\t\t\treturn (\r\n\t\t\t\tthis.renderForm()\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (this.renderWrongLink())\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\nfunction mapStateToProps(state, props) {\r\n\treturn {\r\n\t\teventList: state.eventReducer.eventList,\r\n\t\tmeetingList: state.meetingReducer.meetingList,\r\n\t\tuser: state.userReducer.user\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ScheduleMeeting);","import React, { useState } from 'react';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport FormFields from '../../FormFields/FormFields';\r\nimport { connect } from 'react-redux';\r\nimport { sendPasswordMail } from '../../../actions/userAction';\r\n\r\nconst ForgotPassword = (props) => {\r\n    const [formSubmitted, setFormSubmitted] = useState(false);\r\n    const handleReset = (val) => {\r\n        props.dispatch(sendPasswordMail(val.email))\r\n        setFormSubmitted(true);\r\n    }\r\n\r\n    const renderForm = () => (\r\n        <Form onSubmit={props.handleSubmit(handleReset)}>\r\n                <Field component={FormFields} type=\"email\" label=\"Enter resigtered email address\" placeholder=\"Enter email\" name=\"email\" />\r\n                <Button variant=\"primary\" type=\"submit\" >\r\n                    Send\r\n                </Button>\r\n                <Link to=\"/\" style={{marginLeft: '10px'}}>\r\n                    <Button variant=\"primary\" type=\"submit\" >\r\n                        Cancel\r\n                    </Button>\r\n                    </Link>\r\n            </Form>\r\n    )\r\n\r\n    const renderSubmitSuccess = () => (\r\n        <Form.Text>\r\n            If email is registered you will receive reset password link. Click <Link to=\"/\">here</Link> to login again.\r\n\t\t</Form.Text>\r\n    )\r\n\r\n    return (\r\n        <Card style={{padding: '10px', margin: '50px auto', width: '60%' }}>\r\n            <Card.Title className=\"text-center\">Reset Password</Card.Title>\r\n            {!formSubmitted && renderForm()}\r\n            {formSubmitted && renderSubmitSuccess()}\r\n    </Card>\r\n    )\r\n};\r\n\r\n\r\nfunction validate(values) {\r\n\tconst errors = {};\r\n\tif (!values.email) {\r\n        errors.email = `Email is required`;\r\n    }\r\n\treturn errors;\r\n}\r\n\r\nexport default connect(null, { sendPasswordMail })(reduxForm({\r\n\tvalidate,\r\n\tform: 'forgotForm',\r\n\tdestroyOnUnmount: true\r\n})(ForgotPassword));","export default [\r\n    { type:\"email\", label:\"Enter email\", placeholder:\"Enter email\", name:\"email\" },\r\n    { type:\"password\", label:\"Password\", placeholder:\"Password\", name:\"password\" },\r\n    { type:\"password\", label:\"Confirm Password\", placeholder:\"Password\", name:\"confirm_password\" }\r\n];","import React, { Component, useEffect, useState } from 'react';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\n//import * as userAction from '../../../actions/userAction';\r\n\r\nimport FormFields from '../../FormFields/FormFields';\r\nimport resetFields from './resetFields';\r\nimport { getUser, resetPassword } from '../../../actions/userAction';\r\n\r\nconst ResetPassword = (props) => {\r\n    const [invalidEmail, setInvalidEmail] = useState(false);\r\n    const [formSubmitted, setFormSubmitted] = useState(false);\r\n    const renderFields = () => {\r\n\t\treturn resetFields.map((item) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Field component={FormFields} {...item} />\r\n\t\t\t)\r\n\t\t})\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.dispatch(getUser(props.match.params.user_id))\r\n    })\r\n\r\n    const handleResetPassword = (val) => {\r\n        if(val.email !== props.user.email) {\r\n            setInvalidEmail(true)\r\n        } else {\r\n            //call props\r\n            setFormSubmitted(true)\r\n            props.dispatch(resetPassword(val))\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const renderForm = () => (\r\n        <Form onSubmit={props.handleSubmit(handleResetPassword)}>\r\n                <Form.Text className=\"text-white bg-danger\">\r\n\t\t\t\t\t{invalidEmail && 'Invalid Email'}\r\n\t\t\t\t</Form.Text>\r\n                {renderFields()}\r\n                <Field component=\"input\" type=\"hidden\" name=\"validEmail\" />\r\n                <Button variant=\"primary\" type=\"submit\" >\r\n                    Reset\r\n                </Button>\r\n            </Form>\r\n    )\r\n\r\n    const renderSubmitSuccess = () => (\r\n        <Form.Text>\r\n            Your password has changed. Click <Link to=\"/\">here</Link> to login again.\r\n\t\t</Form.Text>\r\n    )\r\n\r\n    return (\r\n        <Card style={{ padding: '10px', margin: '50px auto', width: '60%' }}>\r\n            <Card.Title className=\"text-center\">Reset Password</Card.Title>\r\n            {!formSubmitted && renderForm()}\r\n            {!invalidEmail && formSubmitted && renderSubmitSuccess()}\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction validate(values) {\r\n\tconst errors = {};\r\n    \r\n    if (values.password !== values.confirm_password) {\r\n\t\terrors.confirm_password = 'Confirm password does not match'\r\n    }\r\n    \r\n\tresetFields.map(({ label, name }) => {\r\n\t\tif (!values[name]) {\r\n\t\t\terrors[name] = `${label} is required`;\r\n\t\t}\r\n\t});\r\n\r\n\treturn errors;\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n    const { user } = state.userReducer\r\n    \r\n\treturn {\r\n\t\tuser\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(reduxForm({\r\n\tvalidate,\r\n\tform: 'resetForm',\r\n\tdestroyOnUnmount: true\r\n})(ResetPassword));","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from './components/authentication/Login/Login';\nimport Dashboard from './components/landing/Dashboard/Dashboard';\nimport ScheduleMeeting from './components/schedule/ScheduleMeeting/ScheduleMeeting';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport {Container} from 'react-bootstrap';\nimport ForgotPassword from './components/authentication/ForgotPassword/ForgotPassword';\nimport SignUp from './components/authentication/SignUp/SignUp';\n\nimport { connect } from 'react-redux';\nimport * as userAction from './actions/userAction';\nimport ResetPassword from './components/authentication/ResetPassword/ResetPassword';\n\nclass App extends Component {\n\tstate = {\n\t\tsignUpFormSubmitted: false\n\t}\n\n\thandleSubmit = (event) => {\n        //event.preventDefault();\n\t\talert('submitted')\n\t\t//this.setState({loggedIn: true})\n\t}\n\n\tonFormSubmit = async (val, saveUser, history) => {\n\t\tthis.setState({signUpFormSubmitted: true})\n\t}\n\n\trender() {\t\t\n\t\treturn (\n\t\t\t<Container style={{paddingTop: '50px'}}>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact component={() => <Login />}/>\n\t\t\t\t<Route path=\"/forgot_password\" component={ForgotPassword} />\n\t\t\t\t<Route path=\"/new_user\" component={() => <SignUp  />} />\n\t\t\t\t<Route path=\"/dashboard\" component={Dashboard} />\t\t\t\t\n\t\t\t\t<Route path=\"/reset_password/:user_id\" exact component={ResetPassword} />\n\n\t\t\t\t<Route path=\"/meeting/:user_id\" exact component={ScheduleMeeting} />\n\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t</Switch>\n\t\t\t\t</BrowserRouter>\n\t\t\t</Container>\n\t\t\t\t\n\t\t\t\t\n\t\t);\n\t}\n\t\n}\n\n\n\nfunction mapStateToProps({userReducer}, props) {\n\tconst { user, loggedIn } = userReducer\n\treturn {\n\t\tuser,\n\t\tloggedIn\n\t}\n}\n\nexport default connect(mapStateToProps, userAction)( App);\n","import { combineReducers } from 'redux';\r\nimport { reducer as reduxForm } from 'redux-form';\r\nimport userReducer from './userReducer';\r\nimport eventReducer from './eventReducer';\r\nimport meetingReducer from './meetingReducer';\r\n\r\nexport default combineReducers({\r\n    form: reduxForm,\r\n    userReducer,\r\n    eventReducer,\r\n    meetingReducer\r\n});","import { ADD_USER, USER_INFO, LOGGED_IN, GET_USER, RESET_PASSWORD } from '../actions/constants';\r\n\r\nexport default function (state = {}, action) {\r\n    \r\n    switch (action.type) {\r\n        case ADD_USER:\r\n            return state;\r\n        case USER_INFO:\r\n            return {\r\n                //action.payload,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n                loggedIn: true\r\n            }\r\n        case GET_USER:\r\n            return {\r\n                user: action.payload.user\r\n            }\r\n        case RESET_PASSWORD:\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_EVENT, VIEW_EVENTS } from '../actions/constants';\r\n\r\nexport default function (state = {}, action) {\r\n    \r\n    switch (action.type) {\r\n        case ADD_EVENT:\r\n            return state;\r\n        case VIEW_EVENTS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_MEETING, VIEW_MEETINGS } from '../actions/constants';\r\n\r\nexport default function (state = {}, action) {\r\n    \r\n    switch (action.type) {\r\n        case ADD_MEETING:\r\n            return state;\r\n        case VIEW_MEETINGS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from '../reducers';\r\n\r\n//const loggerMiddleware = createLogger(); \r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        //loggerMiddleware\r\n    )\r\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\n\nimport { store } from './utils/store';\n\n//const store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}